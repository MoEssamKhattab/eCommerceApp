name: CI/CD Pipeline for Azure Container Instance

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_CONTAINER_REGISTRY: ecommercecr.azurecr.io
  CONTAINER_NAME: ecommerceapp
  RESOURCE_GROUP: eCommerceRG
  ACI_NAME: ecommerce-container
  LOCATION: Canada Central
  IMAGE_NAME: ecommerceapp:${{ github.sha }}
  AZURE_SUBSCRIPTION_ID: 5b1d96e6-c261-48ed-bdfa-9506f23e7d22
  AZURE_SERVICE_PRINCIPAL: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        run: |
          echo $ACR_PASSWORD | docker login $AZURE_CONTAINER_REGISTRY -u $ACR_USERNAME --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME .
          docker push $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME

  deploy:
    name: Deploy to Azure Container Instance
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}

      - name: Deploy to Azure Container Instance
        run: |
          az container create \
            --resource-group $RESOURCE_GROUP \
            --name $ACI_NAME \
            --image $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME \
            --cpu 1 \
            --memory 1.5 \
            --registry-login-server $AZURE_CONTAINER_REGISTRY \
            --registry-username $ACR_USERNAME \
            --registry-password $ACR_PASSWORD \
            --dns-name-label ecommerceapp-${{ github.sha }} \
            --ports 80

      - name: Verify Deployment
        run: |
          az container show --resource-group $RESOURCE_GROUP --name $ACI_NAME --query ipAddress.fqdn --output tsv

  cleanup:
    name: Cleanup Old Images
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Log in to Azure Container Registry
        run: |
          echo $ACR_PASSWORD | docker login $AZURE_CONTAINER_REGISTRY -u $ACR_USERNAME --password-stdin

      - name: Remove Old Docker Images
        run: |
          az acr repository delete --name $AZURE_CONTAINER_REGISTRY --repository ecommerceapp --yes --keep 3
